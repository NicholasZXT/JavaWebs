<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">

    <!--加载外部的属性配置文件-->
    <context:property-placeholder location="classpath:ssm/jdbc.properties" />

    <!--声明数据源，连接数据库-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!--下面两个类都是 org.mybatis: mybatis-spring 这个包提供的类-->
    <!--声明SqlSessionFactoryBean，这个类的内部会创建SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定上面的数据源对象-->
        <property name="dataSource" ref="dataSource" />
        <!--指定mybatis主配置文件，注意，这个mybatis.xml配置中的数据源和事务配置是不生效的-->
        <property name="configLocation"  value="classpath:ssm/mybatis.xml" />
    </bean>
    <!--声明mybatis的扫描器，用于创建dao对象，并放入spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定上面创建的 声明SqlSessionFactoryBean 对象的名称-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="pers.zxt.springmvc.ssm.dao" />
    </bean>

    <!--声明service的注解@Service所在的包名位置，用于创建Service对象并放入spring容器中-->
    <context:component-scan base-package="pers.zxt.springmvc.ssm.service" />

    <!--事务配置：注解的配置， aspectj的配置-->
</beans>